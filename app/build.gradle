import org.apache.tools.ant.filters.ReplaceTokens

apply plugin: 'com.android.application'
apply plugin: 'com.google.firebase.crashlytics'

ext {
    // Obtained from ~/.gradle/gradle.properties on build server (mobile agent), or your local
    // ~/.gradle/gradle.properties file, or loads default empty strings if neither is present
    RELEASE_STORE_FILE = project.properties['AREA_MAPPER_RELEASE_STORE_FILE'] ?: "."
    RELEASE_STORE_PASSWORD = project.properties['AREA_MAPPER_RELEASE_STORE_PASSWORD'] ?: ""
    RELEASE_KEY_ALIAS = project.properties['AREA_MAPPER_RELEASE_KEY_ALIAS'] ?: ""
    RELEASE_KEY_PASSWORD = project.properties['AREA_MAPPER_RELEASE_KEY_PASSWORD'] ?: ""
    GOOGLE_PLAY_MAPS_API_KEY = project.properties['AREA_MAPPER_GOOGLE_PLAY_MAPS_API_KEY'] ?: ""
    GOOGLE_SERVICES_API_KEY = project.properties['AREA_MAPPER_GOOGLE_SERVICES_API_KEY'] ?: ""
}

repositories {
    mavenCentral()
    google()
}

android {
    compileSdkVersion 31

    signingConfigs {
        release {
            storeFile file(project.ext.RELEASE_STORE_FILE)
            storePassword project.ext.RELEASE_STORE_PASSWORD
            keyAlias project.ext.RELEASE_KEY_ALIAS
            keyPassword project.ext.RELEASE_KEY_PASSWORD
        }
    }


    defaultConfig {
        applicationId "richard.chard.lu.android.areamapper"
        signingConfig signingConfigs.release
        minSdkVersion 19
        targetSdkVersion 31
        versionCode 5
        versionName "5.0"
    }

    buildTypes {

        debug {
            resValue "string", "google_maps_api_key", AREA_MAPPER_GOOGLE_PLAY_MAPS_API_KEY
        }

        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            resValue "string", "google_maps_api_key", AREA_MAPPER_GOOGLE_PLAY_MAPS_API_KEY
        }
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'com.google.android.gms:play-services-maps:18.0.2'
    implementation 'com.google.android.gms:play-services-location:19.0.1'
    implementation 'com.google.maps.android:android-maps-utils:2.3.0'
    implementation 'com.google.firebase:firebase-analytics:18.0.3'
    implementation 'com.google.firebase:firebase-crashlytics:17.4.1'
}

afterEvaluate {
    processDebugGoogleServices.dependsOn injectGoogleServicesAPIKey
    processReleaseGoogleServices.dependsOn injectGoogleServicesAPIKey
}


task injectGoogleServicesAPIKey {
    description = 'Injects the Google Services API key into the google-services.json file at runtime'
    copy {
        from file("templates/google-services.json")
        filter(ReplaceTokens, tokens: [apiKey: project.ext.GOOGLE_SERVICES_API_KEY])
        into projectDir
    }
}

apply plugin: 'com.google.gms.google-services'
