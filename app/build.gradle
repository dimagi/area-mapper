apply plugin: 'com.android.application'

Map getProperties() {
    def propsFile = rootProject.file('keystore.properties')
    def configName = 'release'
    def propsMap  = [:]

    println "getProperties"

    if (propsFile.exists() && android.signingConfigs.hasProperty(configName)) {
        def props = new Properties()
        props.load(new FileInputStream(propsFile))

        println "prop exists"

        println "keyAlias: " + props['keyAlias']
        println "keyAlias: " + props['keyPassword']
        println "file: " props['storeFile']

        propsMap.storeFile = file(props['storeFile'])
        propsMap.storePassword = props['storePassword']
        propsMap.keyAlias = props['keyAlias']
        propsMap.keyPassword = props['keyPassword']
    }

    return propsMap;
}

android {

    compileSdkVersion "Google Inc.:Google APIs:23"
    buildToolsVersion "23.0.3"


    signingConfigs {
        release {
            storeFile getProperties().storeFile
            storePassword getProperties().storePassword
            keyAlias getProperties().keyAlias
            keyPassword getProperties().keyPassword
        }
    }


    defaultConfig {
        applicationId "richard.chard.lu.android.areamapper"
        signingConfig signingConfigs.release
        minSdkVersion 11
        targetSdkVersion 21
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:21.0.3'
    compile 'com.google.android.gms:play-services:6.5.87'
    compile 'com.google.maps.android:android-maps-utils:0.3+'
    compile 'ch.acra:acra:4.6.1'
}
